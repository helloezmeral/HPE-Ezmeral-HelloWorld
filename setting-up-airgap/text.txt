How to setup simple docker proxy cache server as docker container to prevent/limit Dockerhub Pull limit issue for internet 
based ECP installation in an ECP test lab (with web proxy, if no web proxy there, just skip web proxy items):
(some reference:
https://circleci.com/docs/2.0/docker-hub-pull-through-mirror/  
https://www.cloudkb.net/configure-docker-local-registry-proxy-cache/ 
https://docs.docker.com/registry/recipes/mirror/ )

1) Run on a host with docker installed that serves as your docker proxy cache server (you can run docker login as well before you run next command if needed):

docker run   -d   -p 5000:5000   --restart=always   --name=through-cache   -e REGISTRY_PROXY_REMOTEURL="https://registry-1.docker.io"   -e REGISTRY_PROXY_USERNAME=your_docker_user   -e REGISTRY_PROXY_PASSWORD=your_docker_user --env http_proxy="your_proxy_url" \--env https_proxy="your_proxy_url" registry

2) Check if local proxy cache registry is running:

curl your_proxy_cache_server_ip_address:5000/v2/_catalog
{"repositories":[]}


3) Configure docker daemon to set your docker proxy cache server as registry-mirror on each K8s/Docker host in your ECP cluster(K8s hosts plus controller host if needed):

vi /etc/docker/daemon.json
{
"log-driver": "json-file",
"log-opts": {
"max-file": "10",
"max-size": "10m"
},
"registry-mirrors": [
"http://your_ip_address:5000"]
}


4) Set host of proxy cache server running as NO_PROXY for docker daemon on each K8s/Docker host in your ECP cluster:

vi /etc/systemd/system/docker.service.d/http-proxy.conf

[Service]
Environment="HTTP_PROXY=your_proxy:8080"
Environment="HTTPS_PROXY=your_proxy:8080"
Environment="NO_PROXY=ip_address_of_your_proxy_cache"


5) Restart docker on all K8s/Docker ECP hosts

service docker restart


6) Check registry mirror and NO PROXY for docker daemon on Docker/K8s ECP hosts
docker info
....
 HTTP Proxy: ...
 HTTPS Proxy: ...
 No Proxy: proxy_cache_server_ip
 Registry: https://index.docker.io/v1/
 Labels:
 Experimental: false
 Insecure Registries:
  127.0.0.0/8
 Registry Mirrors:
  http://proxy_cache_server_ip:5000/
 Live Restore Enabled: false


7) Test if dockerhub pull request gets redirected to docker proxy cache server

Run docker pull nginx or similar on one of your K8s/Docker ECP host

docker pull nginx
Using default tag: latest
latest: Pulling from library/nginx
f7ec5a41d630: Pull complete
aa1efa14b3bf: Pull complete
b78b95af9b17: Pull complete
c7d6bca2b8dc: Pull complete
cf16cd8e71e0: Pull complete
0241c68333ef: Pull complete
Digest: sha256:75a55d33ecc73c2a242450a9f1cc858499d468f077ea942867e662c247b5e412
Status: Downloaded newer image for nginx:latest
docker.io/library/nginx:latest


Check if local repo now contains nginx image
curl your_proxy_cache_ip:5000/v2/_catalog
{"repositories":["library/nginx"]}

You can also check log files on your proxy cache server
docker logs through-cache
...
http.request.method=GET http.request.remoteaddr="10.163.168.221:53094" http.request.uri="/v2/library/nginx/blobs/sha256:f7ec5a41d630a33a2d1db59b95d89d93de7ae5a619a3a8571b78457e48266eba" http.request.useragent="docker/19.03.14 go/go1.13.15 git-commit/5eb3275d40 kernel/3.10.0-1160.21.1.el7.x86_64 os/linux arch/amd64 UpstreamClient(Docker-Client/20.10.2 \(linux\))" http.response.contenttype="application/octet-stream" http.response.duration=228.691821ms http.response.status=200 http.response.written=27139373
... - - [15/Apr/2021:23:36:25 +0000] "GET /v2/library/nginx/blobs/sha256:f7ec5a41d630a33a2d1db59b95d89d93de7ae5a619a3a8571b78457e48266eba HTTP/1.1" 200 27139373 "" "docker/19.03.14 go/go1.13.15 git-commit/5eb3275d40 kernel/3.10.0-11 
...


